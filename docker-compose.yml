services:
  db:
    image: postgres:17
    container_name: idsa-db
    environment:
      - POSTGRES_USER=${SPRING_DATASOURCE_USERNAME}
      - POSTGRES_PASSWORD=${SPRING_DATASOURCE_PASSWORD}
      - POSTGRES_DB=${SPRING_DATASOURCE_DATABASE}
    ports:
      - 5432:5432
    volumes:
      - ./src/main/resources/db/schema.sql:/docker-entrypoint-initdb.d/schema.sql
      - ./docker/postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${SPRING_DATASOURCE_USERNAME} -d ${SPRING_DATASOURCE_DATABASE}"]
      timeout: 10s
      retries: 10
  
  mqtt:
    build:
      context: .docker/mosquitto
      dockerfile: Dockerfile
    container_name: idsa-mqtt
    env_file:
      - .docker/mosquitto/.env
    ports:
      - 1883:1883
  
  api:
    build:
      context: ./
      dockerfile: Dockerfile
    container_name: idsa-api
    environment:
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE}
      - SERVER_PORT=${SERVER_PORT}
      - SPRING_DATASOURCE_HOST=${SPRING_DATASOURCE_HOST}
      - SPRING_DATASOURCE_PORT=${SPRING_DATASOURCE_PORT}
      - SPRING_DATASOURCE_DATABASE=${SPRING_DATASOURCE_DATABASE}
      - SPRING_DATASOURCE_USERNAME=${SPRING_DATASOURCE_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${SPRING_DATASOURCE_PASSWORD}
      - MQTT_BROKER_URL=${MQTT_BROKER_URL}
      - MQTT_CLIENT_ID=${MQTT_CLIENT_ID}
      - MQTT_USERNAME=${MQTT_USERNAME}
      - MQTT_PASSWORD=${MQTT_PASSWORD}
      - MQTT_TOPIC=${MQTT_TOPIC}
      - MQTT_QOS=${MQTT_QOS}
      - FILE_STORAGE_BASE_PATH=${FILE_STORAGE_BASE_PATH}
      - MAILGUN_PRIVATE_API_KEY=${MAILGUN_PRIVATE_API_KEY}
      - MAILGUN_DOMAIN=${MAILGUN_DOMAIN}
      - MAILGUN_FROM_EMAIL=${MAILGUN_FROM_EMAIL}
      - FRONTEND_URL=${FRONTEND_URL}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS}
      - JWT_ACCESS_TOKEN_SECRET_KEY=${JWT_ACCESS_TOKEN_SECRET_KEY}
      - JWT_ACCESS_TOKEN_EXPIRATION=${JWT_ACCESS_TOKEN_EXPIRATION}
      - JWT_REFRESH_TOKEN_SECRET_KEY=${JWT_REFRESH_TOKEN_SECRET_KEY}
      - JWT_REFRESH_TOKEN_EXPIRATION=${JWT_REFRESH_TOKEN_EXPIRATION}
      - JWT_VERIFICATION_SECRET_KEY=${JWT_VERIFICATION_SECRET_KEY}
      - JWT_VERIFICATION_EXPIRATION=${JWT_VERIFICATION_EXPIRATION}
      - JWT_MIN_PREEXPIRY_TIME_TO_RENEW=${JWT_MIN_PREEXPIRY_TIME_TO_RENEW}
      - JWT_MAX_POSTEXPIRY_TIME_TO_RENEW=${JWT_MAX_POSTEXPIRY_TIME_TO_RENEW}
      - ADMIN_EMAIL=${ADMIN_EMAIL}
      - ADMIN_NAME=${ADMIN_NAME}
      - ADMIN_FIRST_SURNAME=${ADMIN_FIRST_SURNAME}
      - ADMIN_SECOND_SURNAME=${ADMIN_SECOND_SURNAME}
      - ADMIN_PHONE_NUMBER=${ADMIN_PHONE_NUMBER}
      - MODEL_BASE_URL=${MODEL_BASE_URL}
      - REPORT_GENERATION_THRESHOLD=${REPORT_GENERATION_THRESHOLD}
    ports:
      - 8080:${SERVER_PORT}
    volumes:
      - ./docker/api/img:${FILE_STORAGE_BASE_PATH}
      - ./docker/api/logs:/app/logs
    depends_on:
      db:
        condition: service_healthy

# docker-compose --env-file .env up -d